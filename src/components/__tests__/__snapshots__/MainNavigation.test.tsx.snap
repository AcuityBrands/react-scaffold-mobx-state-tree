// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main Navigation Component matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainNavigation
    config={
      Array [
        Object {
          "component": "test",
          "icon": "test",
          "key": "1",
          "label": "test",
          "path": "/dashboard",
        },
        Object {
          "component": "test",
          "icon": "test",
          "key": "2",
          "label": "test",
          "path": "/xxx",
        },
      ]
    }
    history={
      Object {
        "listen": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
        },
      }
    }
    location={Object {}}
    match={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MenuItem>
          <Link
            replace={false}
            to="/dashboard"
          >
            <Icon
              type="test"
            />
            <span>
              test
            </span>
          </Link>
        </MenuItem>,
        <MenuItem>
          <Link
            replace={false}
            to="/xxx"
          >
            <Icon
              type="test"
            />
            <span>
              test
            </span>
          </Link>
        </MenuItem>,
      ],
      "className": "",
      "mode": "inline",
      "prefixCls": "ant-menu",
      "selectedKeys": Array [],
      "theme": "dark",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "children": <Link
            replace={false}
            to="/dashboard"
          >
            <Icon
              type="test"
            />
            <span>
              test
            </span>
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Icon
                type="test"
              />,
              <span>
                test
              </span>,
            ],
            "replace": false,
            "to": "/dashboard",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "type": "test",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "children": <Link
            replace={false}
            to="/xxx"
          >
            <Icon
              type="test"
            />
            <span>
              test
            </span>
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Icon
                type="test"
              />,
              <span>
                test
              </span>,
            ],
            "replace": false,
            "to": "/xxx",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "type": "test",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MenuItem>
            <Link
              replace={false}
              to="/dashboard"
            >
              <Icon
                type="test"
              />
              <span>
                test
              </span>
            </Link>
          </MenuItem>,
          <MenuItem>
            <Link
              replace={false}
              to="/xxx"
            >
              <Icon
                type="test"
              />
              <span>
                test
              </span>
            </Link>
          </MenuItem>,
        ],
        "className": "",
        "mode": "inline",
        "prefixCls": "ant-menu",
        "selectedKeys": Array [],
        "theme": "dark",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": <Link
              replace={false}
              to="/dashboard"
            >
              <Icon
                type="test"
              />
              <span>
                test
              </span>
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Icon
                  type="test"
                />,
                <span>
                  test
                </span>,
              ],
              "replace": false,
              "to": "/dashboard",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "type": "test",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "children": <Link
              replace={false}
              to="/xxx"
            >
              <Icon
                type="test"
              />
              <span>
                test
              </span>
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Icon
                  type="test"
                />,
                <span>
                  test
                </span>,
              ],
              "replace": false,
              "to": "/xxx",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "type": "test",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
